// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  discordId BigInt @id @map("discord_id")
  userId    Int    @map("user_id")
  username  String @map("username")

  tournaments Tournament[]
  ownedTeams  Team[]       @relation("captain")
  teams       Team[]

  @@map("users")
}

model Tournament {
  id                 BigInt @id @default(autoincrement()) @map("id")
  serverId           BigInt @map("server_id")
  schedulesChannelId BigInt @map("schedules_channel_id")

  playerRoleId  BigInt         @map("player_role_id")
  refereeRoleId BigInt         @map("referee_role_id")
  type          TournamentType @map("type")

  stages Stage[]
  owner  User    @relation(fields: [id], references: [discordId])

  @@map("tournaments")
}

model Stage {
  id   BigInt    @id @default(autoincrement()) @map("id")
  type StageType @map("type")

  lobbies    Lobby[]
  tournament Tournament @relation(fields: [id], references: [id])

  @@map("stages")
}

model Lobby {
  id       BigInt      @id @default(autoincrement()) @map("id")
  namedId  String      @map("named_id")
  schedule DateTime    @map("schedule")
  status   LobbyStatus @default(PENDING) @map("status")

  teams Team[]
  stage Stage  @relation(fields: [id], references: [id])

  @@map("lobbies")
}

model Team {
  id   BigInt @id @default(autoincrement()) @map("id")
  name String @map("name")

  owner   User    @relation("captain", fields: [id], references: [discordId])
  players User[]
  lobbies Lobby[]

  @@map("teams")
}

enum LobbyStatus {
  PENDING
  DONE
}

enum LobbyType {
  QUALIFIERS
  TEAM_BASED
  BATTLE_ROYALE
}

enum StageType {
  GROUPS
  QUALIFIERS
  ROUND_64
  ROUND_32
  ROUND_16
  QUARTERFINALS
  SEMIFINALS
  FINALS
  GRANDFINALS
}

enum TournamentType {
  TEAM_BASED
  ONE_VS_ONE
  BATTLE_ROYALE
}
